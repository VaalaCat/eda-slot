`include "devider.vl"
`include "show.vl"
`include "trans.vl"


module main(
	input clk,
	input cheat,
	input start,
	input rst_n,

	output reg flash,
	output reg [3:0] select,
	output reg [6:0] led

);

parameter WIDTH2 = 26,
		  WIDTH = 5,
		  SIZE = 8;

reg [15:0] scanCnt;
reg [3:0] dispNum;
reg [18:0] normalSeed;//记录停止前的时间
reg [18:0] cheatSeed;//作弊信号的记录时间
wire [6:0] ledNum;

wire [25:0] clk_cnt1, clk_cnt2, clk_cnt3;

wire [2:0] showNum0, showNum1, showNum2;

wire integer realNum0, realNum1, realNum2;

always @(posedge clk or negedge rst_n) begin 
	if (rst_n ==1'b0) 
		scanCnt <= 16'b0;
	else 
		scanCnt <= scanCnt + 16'b1;
end

always @(posedge clk or negedge rst_n) begin
	if (rst_n ==1'b0) 
		select <= 4'b0001;
	else if ( scanCnt[15:14] == 0 )
		select <= 4'b0001;
	else if ( scanCnt[15:14] == 1 )
		select <= 4'b0010;
	else if ( scanCnt[15:14] == 2 )
		select <= 4'b0100;
	else if ( scanCnt[15:14] == 3 )
		select <= 4'b1000;		 
	else;
end

devider #(.TIME_N(26'd10000000)) d1(clk, rst_n, clk_cnt1);
devider #(.TIME_N(26'd20000000)) d2(clk, rst_n, clk_cnt2);
devider #(.TIME_N(26'd30000000)) d3(clk, rst_n, clk_cnt3);

always @( posedge clk or negedge rst_n ) begin //记录开始时到stop为1时的时间，作为随机数的种子
	if ( rst_n == 1'b0 ) 
		normalSeed <= 4'd0;
	else if ( clk_cnt1 == 26'd10000000 ) begin
		normalSeed <= normalSeed + 1;
	end
end

always @(posedge clk or negedge rst_n) begin //记录开始时到cheat为1时的时间，作为作弊随机数的种子
	if (rst_n ==1'b0) 
		cheatSeed <= 4'd0;
	else if ( clk_cnt1 == 26'd10000000 ) begin
		if ( cheat == 0 )
			cheatSeed <= cheatSeed + 1;
		else
			cheatSeed <= cheatSeed;
	end
end

show #(.TIME_N(26'd10000000), .BASE(123), .REAL_NUM(-1)) s1(clk, rst_n, clk_cnt1, start, cheat, normalSeed, cheatSeed, showNum0, realNum0);
show #(.TIME_N(26'd20000000), .BASE(456), .REAL_NUM(-2)) s2(clk, rst_n, clk_cnt2, start, cheat, normalSeed, cheatSeed, showNum1, realNum1);
show #(.TIME_N(26'd30000000), .BASE(789), .REAL_NUM(-3)) s3(clk, rst_n, clk_cnt3, start, cheat, normalSeed, cheatSeed, showNum2, realNum2);

always @(posedge clk or negedge rst_n) begin //对t1，t2，t3进行判断，如果相同则表示老虎机最后三个输出相等，tip闪烁
	if (rst_n == 1'b0) 
		flash <= 4'd0;
	else if ( clk_cnt3 == 26'd30000000 ) begin
		if( realNum0 == realNum1 && realNum1 == realNum2 && start == 1)
			flash =~ flash;
		else
			flash = 0;
	end
end

always @(select) begin //根据位选信号将不同输出赋给不同的数码管
	if ( select == 4'b0001 ) 
		dispNum = showNum0;
	else if ( select == 4'b0010 ) 
		dispNum = showNum1;
	else if ( select == 4'b0100 ) 
		dispNum = showNum2;
	else 
		dispNum = 8;
end

trans t(dispNum, ledNum);

always @(*) begin
	led <= ~ledNum;
end

endmodule